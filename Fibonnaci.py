"""
    Problem Statement :
       Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
       the first 10 terms will be:
                                    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        By considering the terms in the Fibonacci sequence whose values do not exceed four million,
        find the sum of the even-valued terms.
"""

def fibonacci_range(endpoint):
    """
        fibonnacci_range is a generator function inspired by the range function of python. It produces one fibonnaci number
        at a time. The end_point argument signify till which number you want the fibonnacci numbers
        :param end_point: integer value. The numbers will be produced by the generator function till a becomes greater or
                          equal to the end_point
        :return: the next fibonnaci number in the sequence
    """

    a, b =1, 2
    while True:
        yield a
        a, b = b, a + b
        if a >= endpoint:
            break

result = sum([x for x in fibonacci_range(4_000_000) if x%2 == 0])
print(result)

#Anser = 4613732